@model GeoWorldHotelSearch.Models.SearchViewModel
@{
    ViewData["Title"] = "Search Results";
}

<div class="container mt-4">
    <h1 class="mb-4">Search Results</h1>
    
    <div class="row mb-4">
        <div class="col-md-8">
            <form asp-controller="Hotels" asp-action="Search" method="get" class="d-flex">
                <input type="text" name="query" class="form-control me-2" value="@ViewBag.Query" placeholder="Search hotels...">
                <button class="btn btn-outline-primary" type="submit">
                    <i class="bi bi-search"></i>
                </button>
            </form>
        </div>
        <div class="col-md-4 text-end">
            <p class="text-muted mt-2">
                Found @Model.TotalResults results for "@ViewBag.Query"
            </p>
        </div>
    </div>

    @if (!Model.Results.Any())
    {
        <div class="alert alert-info">
            <h4 class="alert-heading">No results found</h4>
            <p>We couldn't find any hotels matching your search criteria. Try using different keywords or browse all hotels.</p>
            <hr>
            <div class="d-flex">
                <a asp-controller="Hotels" asp-action="Index" class="btn btn-outline-primary me-2">
                    Browse All Hotels
                </a>
                <a asp-controller="Home" asp-action="Index" class="btn btn-outline-secondary">
                    Return to Home
                </a>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-md-3">
                <div class="card shadow-sm mb-4">
                    <div class="card-body">
                        <h5 class="card-title">Filter Results</h5>
                        <form asp-controller="Hotels" asp-action="Search" method="get" id="filterForm">
                            <input type="hidden" name="query" value="@ViewBag.Query">
                            
                            <div class="mb-3">
                                <label class="form-label">Price Range</label>
                                <div class="d-flex align-items-center">
                                    <input type="number" name="minPrice" class="form-control form-control-sm me-2" 
                                           placeholder="Min" value="@ViewBag.MinPrice">
                                    <span>to</span>
                                    <input type="number" name="maxPrice" class="form-control form-control-sm ms-2" 
                                           placeholder="Max" value="@ViewBag.MaxPrice">
                                </div>
                            </div>
                            
                            <div class="mb-3">
                                <label class="form-label">Star Rating</label>
                                <div>
                                    @for (int i = 5; i >= 1; i--)
                                    {
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" name="stars" value="@i" 
                                                   id="star@i" @(ViewBag.Stars != null && ViewBag.Stars.Contains(i) ? "checked" : "")>
                                            <label class="form-check-label" for="star@i">
                                                @for (int j = 0; j < i; j++)
                                                {
                                                    <i class="bi bi-star-fill text-warning"></i>
                                                }
                                            </label>
                                        </div>
                                    }
                                </div>
                            </div>
                            
                            <div class="mb-3">
                                <label class="form-label">Amenities</label>
                                <div>
                                    @foreach (var amenity in new[] { "WiFi", "Swimming Pool", "Gym", "Restaurant", "Free Parking", "Breakfast Included" })
                                    {
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" name="amenities" value="@amenity" 
                                                   id="@amenity.Replace(" ", "")" @(ViewBag.Amenities != null && ViewBag.Amenities.Contains(amenity) ? "checked" : "")>
                                            <label class="form-check-label" for="@amenity.Replace(" ", "")">
                                                @amenity
                                            </label>
                                        </div>
                                    }
                                </div>
                            </div>
                            
                            <div class="d-grid gap-2">
                                <button type="submit" class="btn btn-primary">Apply Filters</button>
                                <button type="button" class="btn btn-outline-secondary" id="clearFilters">Clear Filters</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            
            <div class="col-md-9">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <div>
                        <label for="sortOrder" class="form-label me-2">Sort by:</label>
                        <select id="sortOrder" class="form-select form-select-sm d-inline-block w-auto">
                            <option value="relevance" selected="@(ViewBag.SortOrder == "relevance")">Relevance</option>
                            <option value="price_asc" selected="@(ViewBag.SortOrder == "price_asc")">Price (Low to High)</option>
                            <option value="price_desc" selected="@(ViewBag.SortOrder == "price_desc")">Price (High to Low)</option>
                            <option value="rating_desc" selected="@(ViewBag.SortOrder == "rating_desc")">Rating (Highest First)</option>
                        </select>
                    </div>
                    <div>
                        <span class="text-muted">
                            Showing @((Model.CurrentPage - 1) * Model.PageSize + 1)-@(Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalResults)) of
                            @Model.TotalResults hotels
                        </span>
                    </div>
                </div>

                @foreach (var hotel in Model.Results)
                {
                    <div class="card mb-3 shadow-sm">
                        <div class="row g-0">
                            <div class="col-md-4">
                                <img src="@(string.IsNullOrEmpty(hotel.ImageUrl) ? "/images/hotel-placeholder.jpg" : hotel.ImageUrl)" 
                                     class="img-fluid rounded-start" alt="@hotel.Name" style="height: 100%; object-fit: cover;">
                            </div>
                            <div class="col-md-8">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-start">
                                        <h5 class="card-title">@hotel.Name</h5>
                                        <span class="badge bg-primary">$@hotel.PricePerNight.ToString("0.00")/night</span>
                                    </div>
                                    <p class="card-text text-muted">
                                        <i class="bi bi-geo-alt"></i> @hotel.Location, @hotel.City, @hotel.Country
                                    </p>
                                    <div class="mb-2">
                                        @for (int i = 0; i < hotel.Stars; i++)
                                        {
                                            <i class="bi bi-star-fill text-warning"></i>
                                        }
                                        <span class="ms-2">(@hotel.Rating.ToString("0.0"))</span>
                                    </div>
                                    <p class="card-text">
                                        @(hotel.Description.Length > 150 ? hotel.Description.Substring(0, 150) + "..." : hotel.Description)
                                    </p>
                                    <div class="d-flex flex-wrap mb-2">
                                        @foreach (var amenity in hotel.Amenities.Take(3))
                                        {
                                            <span class="badge bg-light text-dark me-2 mb-1">
                                                <i class="bi bi-check-circle-fill text-success me-1"></i> @amenity
                                            </span>
                                        }
                                        @if (hotel.Amenities.Count > 3)
                                        {
                                            <span class="badge bg-light text-dark me-2 mb-1">+@(hotel.Amenities.Count - 3) more</span>
                                        }
                                    </div>
                                    <div class="d-flex justify-content-end mt-2">
                                        <a asp-action="Details" asp-route-id="@hotel.Id" class="btn btn-outline-primary">
                                            View Details
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }

                @if (Model.TotalPages > 1)
                {
                    <nav aria-label="Page navigation">
                        <ul class="pagination justify-content-center">
                            @if (Model.CurrentPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" asp-action="Search" asp-route-query="@Model.Query" asp-route-page="1">First</a>
                                </li>
                                <li class="page-item">
                                    <a class="page-link" asp-action="Search" asp-route-query="@Model.Query" asp-route-page="@(Model.CurrentPage - 1)">Previous</a>
                                </li>
                            }

                            @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                            {
                                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                    <a class="page-link" asp-action="Search" asp-route-query="@Model.Query" asp-route-page="@i">@i</a>
                                </li>
                            }

                            @if (Model.CurrentPage < Model.TotalPages)
                            {
                                <li class="page-item">
                                    <a class="page-link" asp-action="Search" asp-route-query="@Model.Query" asp-route-page="@(Model.CurrentPage + 1)">Next</a>
                                </li>
                                <li class="page-item">
                                    <a class="page-link" asp-action="Search" asp-route-query="@Model.Query" asp-route-page="@Model.TotalPages">Last</a>
                                </li>
                            }
                        </ul>
                    </nav>
                }
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        // Handle sort order changes
        document.getElementById('sortOrder').addEventListener('change', function() {
            const currentUrl = new URL(window.location.href);
            currentUrl.searchParams.set('sortOrder', this.value);
            window.location.href = currentUrl.toString();
        });
        
        // Handle clear filters button
        document.getElementById('clearFilters').addEventListener('click', function() {
            const form = document.getElementById('filterForm');
            const query = form.querySelector('input[name="query"]').value;
            window.location.href = '/Hotels/Search?query=' + encodeURIComponent(query);
        });
    </script>
}
